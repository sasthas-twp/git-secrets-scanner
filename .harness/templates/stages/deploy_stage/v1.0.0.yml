template:
  name: "Deploy to ${env.name}"
  identifier: deploy_${env.id}_stage
  versionLabel: "1.0.0"
  type: Stage
  projectIdentifier: ${projectIdentifier}
  orgIdentifier: ${orgIdentifier}
  spec:
    service:
      serviceRef: ${serviceConfig.serviceRef}
      serviceInputs:
        serviceDefinition:
          type: Kubernetes
          spec:
            manifests:
              - manifest:
                  identifier: "k8s-manifest"
                  type: K8sManifest
                  spec:
                    store:
                      type: Git
                      spec:
                        repoName: ${serviceConfig.repoName}
                        connectorRef: ${serviceConfig.connectorRef}
                        gitFetchType: Branch
                        paths:
                          - ${serviceConfig.manifestPath}
                        branch: ${serviceConfig.branch}
    infrastructure:
      environmentRef: ${env.environmentRef}
      infrastructureDefinition:
        type: KubernetesDirect
        spec:
          connectorRef: ${env.connectorRef}
          namespace: ${env.namespace}
          releaseName: ${serviceConfig.releaseName}
    execution:
      steps:
        - step:
            type: K8sRollingDeploy
            name: "Deploy to ${env.name}"
            identifier: deploy_to_${env.id}
            spec:
              skipDryRun: false
              pruningEnabled: true
              timeout: 10m
              skipSteadyStateCheck: false
      rollbackSteps:
        - step:
            type: K8sRollingRollback
            name: "Rollback ${env.name}"
            identifier: rollback_${env.id}
            spec:
              pruningEnabled: true
      failureStrategies:
        - onFailure:
            errors:
              - AllErrors
            action:
              type: StageRollback
              spec: {}
